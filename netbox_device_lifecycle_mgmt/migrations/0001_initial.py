# Generated by Django 4.1.8 on 2023-04-23 11:17

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0092_delete_jobresult'),
    ]

    operations = [
        migrations.CreateModel(
            name='HardwareNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                (
                    'custom_field_data',
                    models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
                ),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('object_id', models.PositiveBigIntegerField()),
                ('release_date', models.DateField(blank=True, null=True)),
                ('end_of_sale_date', models.DateField(blank=True, null=True)),
                ('end_of_support_date', models.DateField(blank=True, null=True)),
                ('end_of_sw_releases_date', models.DateField(blank=True, null=True)),
                ('end_of_security_updates_date', models.DateField(blank=True, null=True)),
                ('documentation_url', models.URLField(blank=True)),
                (
                    'object_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='contenttypes.contenttype',
                    ),
                ),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Hardware Notice',
                'verbose_name_plural': 'Hardware Notices',
                'ordering': ['end_of_support_date', 'end_of_sale_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='hardwarenotice',
            constraint=models.UniqueConstraint(
                fields=('object_type', 'object_id'),
                name='netbox_device_lifecycle_mgmt_hardwarenotice_unique_object',
                violation_error_message='A hardware notice already exists for this object.',
            ),
        ),
        migrations.AddConstraint(
            model_name='hardwarenotice',
            constraint=models.CheckConstraint(
                check=models.Q(
                    ('end_of_sale_date__isnull', False),
                    ('end_of_support_date__isnull', False),
                    _connector='OR',
                ),
                name='netbox_device_lifecycle_mgmt_hardwarenotice_end_of_sale_or_support',
                violation_error_message='Either end of sale or end of support must be set.',
            ),
        ),
    ]
